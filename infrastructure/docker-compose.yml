version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tripgenie
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d tripgenie"]
      interval: 5s
      timeout: 3s
      retries: 20
    ports:
      - "5432:5432"
    networks:
      - tripgenie-network

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20
    ports:
      - "6379:6379"
    networks:
      - tripgenie-network

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - tripgenie-network

  api:
    build:
      context: ../apps/api
      dockerfile: Dockerfile
    env_file:
      - ../apps/api/.env.docker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/healthz"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - tripgenie-network
    volumes:
      - ../apps/api/tmp:/app/tmp

  web:
    build:
      context: ../apps/web
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: "http://localhost:8080"
        NEXT_PUBLIC_APP_URL: "http://localhost:3000"
    env_file:
      - ../apps/web/.env.docker
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      - INTERNAL_API_URL=http://api:8080
    networks:
      - tripgenie-network

volumes:
  pgdata:
  redisdata:

networks:
  tripgenie-network:
    driver: bridge